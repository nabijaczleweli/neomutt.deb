From: =?utf-8?b?0L3QsNCx?= <nabijaczleweli@nabijaczleweli.xyz>
Date: Tue, 8 Aug 2023 00:16:32 +0200
Subject: Add bool browser_sort_dirs_first, always putting directories first

Co-authored-by: Richard Russon <rich@flatcap.org>
Upstream: 753a4caa0e617ea27e5a5d98ecb2885830adc1f5
Upstream: #3949
---
 browser/browser.c | 22 +++++++++++++++-------
 browser/config.c  |  3 +++
 browser/sort.c    |  7 ++++++-
 docs/config.c     |  7 +++++++
 4 files changed, 31 insertions(+), 8 deletions(-)

diff --git a/browser/browser.c b/browser/browser.c
index 5d5e3c1..3da54ae 100644
--- a/browser/browser.c
+++ b/browser/browser.c
@@ -1076,17 +1076,25 @@ static int browser_config_observer(struct NotifyCallback *nc)
 
   struct EventConfig *ev_c = nc->event_data;
 
-  if (!mutt_str_equal(ev_c->name, "browser_abbreviate_mailboxes") &&
-      !mutt_str_equal(ev_c->name, "date_format") && !mutt_str_equal(ev_c->name, "folder") &&
-      !mutt_str_equal(ev_c->name, "folder_format") &&
-      !mutt_str_equal(ev_c->name, "group_index_format") &&
-      !mutt_str_equal(ev_c->name, "mailbox_folder_format") &&
-      !mutt_str_equal(ev_c->name, "sort_browser"))
+  struct Menu *menu = nc->global_data;
+
+  if (mutt_str_equal(ev_c->name, "browser_sort_dirs_first"))
+  {
+    struct BrowserState *state = menu->mdata;
+    browser_sort(state);
+    browser_highlight_default(state, menu);
+  }
+  else if (!mutt_str_equal(ev_c->name, "browser_abbreviate_mailboxes") &&
+           !mutt_str_equal(ev_c->name, "date_format") &&
+           !mutt_str_equal(ev_c->name, "folder") &&
+           !mutt_str_equal(ev_c->name, "folder_format") &&
+           !mutt_str_equal(ev_c->name, "group_index_format") &&
+           !mutt_str_equal(ev_c->name, "mailbox_folder_format") &&
+           !mutt_str_equal(ev_c->name, "sort_browser"))
   {
     return 0;
   }
 
-  struct Menu *menu = nc->global_data;
   menu_queue_redraw(menu, MENU_REDRAW_FULL);
   mutt_debug(LL_DEBUG5, "config done, request WA_RECALC, MENU_REDRAW_FULL\n");
 
diff --git a/browser/config.c b/browser/config.c
index 3d0e889..5f6391d 100644
--- a/browser/config.c
+++ b/browser/config.c
@@ -76,6 +76,9 @@ static struct ConfigDef BrowserVars[] = {
   { "sort_browser", DT_SORT|DT_SORT_REVERSE, SORT_ALPHA, IP SortBrowserMethods, NULL,
     "Sort method for the browser"
   },
+  { "browser_sort_dirs_first", DT_BOOL, false, 0, NULL,
+    "Group directories before files in the browser"
+  },
   { NULL },
   // clang-format on
 };
diff --git a/browser/sort.c b/browser/sort.c
index 62c7308..3e001b8 100644
--- a/browser/sort.c
+++ b/browser/sort.c
@@ -27,6 +27,7 @@
  */
 
 #include "config.h"
+#include <sys/stat.h>
 #include "mutt/lib.h"
 #include "config/lib.h"
 #include "core/lib.h"
@@ -151,7 +152,7 @@ static int browser_compare_count_new(const void *a, const void *b)
  *
  * Wild compare function that calls the others. It's useful because it provides
  * a way to tell "../" is always on the top of the list, independently of the
- * sort method.
+ * sort method.  $browser_sort_dirs_first is also handled here.
  */
 static int browser_compare(const void *a, const void *b)
 {
@@ -163,6 +164,10 @@ static int browser_compare(const void *a, const void *b)
   if ((mutt_str_coll(pb->desc, "../") == 0) || (mutt_str_coll(pb->desc, "..") == 0))
     return 1;
 
+  if (cs_subset_bool(NeoMutt->sub, "browser_sort_dirs_first"))
+    if (S_ISDIR(pa->mode) != S_ISDIR(pb->mode))
+      return S_ISDIR(pa->mode) ? -1 : 1;
+
   const enum SortType c_sort_browser = cs_subset_sort(NeoMutt->sub, "sort_browser");
   switch (c_sort_browser & SORT_MASK)
   {
diff --git a/docs/config.c b/docs/config.c
index 4df2c29..88ff209 100644
--- a/docs/config.c
+++ b/docs/config.c
@@ -4936,6 +4936,13 @@
 ** The "unread" value is a synonym for "new".
 */
 
+{ "browser_sort_dirs_first", DT_BOOL, false },
+/*
+** .pp
+** If this variable is \fIset\fP, the browser will group directories before
+** files.
+*/
+
 { "sort_re", DT_BOOL, true },
 /*
 ** .pp
