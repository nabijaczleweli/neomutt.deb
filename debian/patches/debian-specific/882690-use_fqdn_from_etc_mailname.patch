If /etc/mailname is present, the hostname inside the file will be
used, rather than calling gethostbyname() on the actual hostname.

This patch is based on Md.etc_mailname_gethostbyname.patch which did not apply
cleanly to mutt 1.9.1 so I decided to rewrite to use the mutt libraries.

--- a/init.c
+++ b/init.c
@@ -534,6 +534,32 @@
 }
 #endif
 
+#ifndef DOMAIN
+/* getmailname returns the content of /etc/mailname if present, so that the caller can use that instead of calling
+ * gethostbyname() on the hostname; the function returns NULL in case of failure or a dynamically allocated buffer in
+ * case of success. The buffer needs to be freed after use.
+ */
+static char *getmailname(void)
+{
+  FILE *f;
+  int lineno = 0;
+  size_t slen = 0;
+  char *s;
+
+  if (!(f = safe_fopen("/etc/mailname", "r")))
+  {
+    return NULL;
+  }
+
+  s = mutt_read_line(NULL, &slen, f, &lineno, 0);
+  safe_fclose(&f);
+  if (!s || slen == 0) {
+    return NULL;
+  }
+  return s;
+}
+#endif
+
 int mutt_extract_token(struct Buffer *dest, struct Buffer *tok, int flags)
 {
   if (!dest || !tok)
@@ -4171,6 +4197,12 @@
     NewsServer = mutt_str_strdup(p);
   }
 #endif
+  /* If /etc/mailname is available, use that as domain name, otherwise the
+   * configured domain, DNS or uname (in order) */
+  if ((p = getmailname()))
+  {
+    Hostname = safe_strdup(p);
+  }
 
   if ((p = getenv("MAIL")))
     SpoolFile = mutt_str_strdup(p);
